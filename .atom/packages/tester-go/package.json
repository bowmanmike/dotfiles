{
  "_args": [
    [
      {
        "raw": "/private/var/folders/85/84ylbg5x3r74b8_f_05d29v40000gn/T/d-116119-33843-py7y86/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/85/84ylbg5x3r74b8_f_05d29v40000gn/T/d-116119-33843-py7y86/package.tgz",
        "spec": "/private/var/folders/85/84ylbg5x3r74b8_f_05d29v40000gn/T/d-116119-33843-py7y86/package.tgz",
        "type": "local"
      },
      "/private/var/folders/85/84ylbg5x3r74b8_f_05d29v40000gn/T/apm-install-dir-116119-33843-lvwy8a"
    ]
  ],
  "_from": "../d-116119-33843-py7y86/package.tgz",
  "_id": "tester-go@2.0.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/tester-go",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/85/84ylbg5x3r74b8_f_05d29v40000gn/T/d-116119-33843-py7y86/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/85/84ylbg5x3r74b8_f_05d29v40000gn/T/d-116119-33843-py7y86/package.tgz",
    "spec": "/private/var/folders/85/84ylbg5x3r74b8_f_05d29v40000gn/T/d-116119-33843-py7y86/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-116119-33843-py7y86/package.tgz",
  "_shasum": "cd6cf01df86338e47165c70c98a6760ea2ad2d90",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/85/84ylbg5x3r74b8_f_05d29v40000gn/T/d-116119-33843-py7y86/package.tgz",
  "_where": "/private/var/folders/85/84ylbg5x3r74b8_f_05d29v40000gn/T/apm-install-dir-116119-33843-lvwy8a",
  "author": {
    "name": "Joe Fitzgerald",
    "email": "jfitzgerald@pivotal.io",
    "url": "http://github.com/joefitzgerald"
  },
  "bugs": {
    "url": "https://github.com/joefitzgerald/tester-go/issues"
  },
  "configSchema": {
    "runTestsOnSave": {
      "title": "Run Tests On Save",
      "description": "Run `go test -coverprofile` each time a file is saved",
      "type": "boolean",
      "default": true,
      "order": 1
    },
    "runTestsWithShortFlag": {
      "title": "Run Tests With Short Flag Set",
      "description": "Runs `go test` with `-short` flag set",
      "type": "boolean",
      "default": true,
      "order": 2
    },
    "coverageHighlightMode": {
      "title": "Coverage Highlight Mode",
      "description": "Control the way that coverage highlighting occurs",
      "type": "string",
      "default": "uncovered",
      "enum": [
        "covered-and-uncovered",
        "covered",
        "uncovered",
        "disabled"
      ],
      "order": 3
    },
    "focusPanelIfTestsFail": {
      "title": "Focus The go-plus Panel If Tests Fail",
      "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the test tab focused when tests fail.",
      "type": "boolean",
      "default": true,
      "order": 4
    }
  },
  "consumedServices": {
    "go-config": {
      "versions": {
        "^1.0.0": "consumeGoconfig"
      }
    },
    "go-get": {
      "versions": {
        "^2.0.0": "consumeGoget"
      }
    }
  },
  "dependencies": {
    "ansi-to-html": "^0.4.1",
    "atom-package-deps": "4.2.0",
    "etch": "0.6.3",
    "lodash": "^4.16.2",
    "rimraf": "^2.5.4",
    "temp": "^0.8.3"
  },
  "description": "A tester package for the Go language that uses `go test` to run tests, display test output and display test coverage.",
  "devDependencies": {
    "fs-plus": "^2.9.2",
    "standard": "^8.3.0"
  },
  "engines": {
    "atom": ">=1.5.3 <2.0.0"
  },
  "homepage": "https://atom.io/packages/tester-go",
  "keywords": [
    "go",
    "golang",
    "test",
    "tester",
    "coverage"
  ],
  "license": "Apache-2.0",
  "main": "./lib/main",
  "name": "tester-go",
  "optionalDependencies": {},
  "package-deps": [
    "go-config",
    "go-get",
    "linter"
  ],
  "providedServices": {
    "go-plus.view": {
      "versions": {
        "0.1.0": "provideGoPlusView"
      }
    }
  },
  "readme": "# `tester-go` Atom Tester [![Build Status](https://travis-ci.org/joefitzgerald/tester-go.svg?branch=master)](https://travis-ci.org/joefitzgerald/tester-go) [![Build status](https://ci.appveyor.com/api/projects/status/wgivdhtdd0foyylw/branch/master?svg=true)](https://ci.appveyor.com/project/joefitzgerald/tester-go/branch/master)\n\n`tester-go` runs `go test -coverprofile` on your code and then displays coverage\ninformation in the editor. By default this is done automatically on save, and you can disable it via package configuration.\n\nIt depends on the following packages:\n\n* [`go-config`](https://atom.io/packages/go-config)\n* [`go-get`](https://atom.io/packages/go-get)\n\n## Usage\n\n* Run\n* Run tests for the current package with `golang: run-tests` or the shortcut <kbd>ctrl</kbd> + <kbd>alt</kbd> + <kbd>shift</kbd> + <kbd>g</kbd>&nbsp;&nbsp;<kbd>t</kbd>.\n* Clear coverage with `golang: hide-coverage` or <kbd>ctrl</kbd> + <kbd>alt</kbd> + <kbd>shift</kbd> + <kbd>g</kbd>&nbsp;&nbsp;<kbd>x</kbd>.\n\n## Configuration\n\n* `runTestsOnSave`: Run `go test -coverprofile` on the current package each\ntime you save a `.go` file (default: `true`)\n* `runTestsWithShortFlag`: Runs `go test` with `-short` flag set (default: `true`)\n* `coverageHighlightMode`: Control the way that coverage highlighting occurs:\n  * `covered-and-uncovered`: highlight covered and uncovered regions of text\n  * `covered`: highlight covered regions of text\n  * `uncovered`: highlight uncovered regions of text\n  * `disabled`: disable highlighting\n* `focusPanelIfTestsFail`: If the `go-plus` panel is hidden, or the panel is showing a different tab, the panel will be expanded and the test tab focused when tests fail (default: `true`)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/joefitzgerald/tester-go.git"
  },
  "standard": {
    "globals": [
      "atom",
      "waitsForPromise"
    ]
  },
  "version": "2.0.2"
}
