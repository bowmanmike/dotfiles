{"_id":"better-curry","_rev":"29-ef9f1e95f5e30b88460401ebc68d6663","name":"better-curry","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","dist-tags":{"latest":"1.6.0"},"versions":{"1.0.0":{"name":"better-curry","version":"1.0.0","description":"While Function.bind is dragging your performance down, there's always a better curry","main":"index.js","scripts":{"test":"mocha","benchmark":"node test/benchmark.js"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying"],"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"^1.0.0"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.0.0","dist":{"shasum":"75eecf01cd322137713332d555feffa4eb447a78","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.0.0.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"directories":{}},"1.1.0":{"name":"better-curry","version":"1.1.0","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","main":"index.js","scripts":{"test":"mocha","coverage":"node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha","benchmark":"node test/benchmark.js"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying","partial function","functional","delegate"],"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"^1.0.0","delegates":"*"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.1.0","dist":{"shasum":"9e7ef549d2f6ff6d7cae7a07a3f4ae9008b130bc","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.1.0.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"directories":{}},"1.1.1":{"name":"better-curry","version":"1.1.1","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","main":"index.js","scripts":{"test":"mocha","coverage":"node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha","benchmark":"node test/benchmark.js"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying","partial function","functional","delegate"],"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"^1.0.0","delegates":"*"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.1.1","dist":{"shasum":"3d4fabb6020e0b100f021dc595961721ba823429","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.1.1.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"directories":{}},"1.1.2":{"name":"better-curry","version":"1.1.2","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","main":"index.js","scripts":{"test":"mocha","coverage":"node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha","benchmark":"node test/benchmark.js"},"engines":{"node":">=0.10"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying","partial function","functional","delegate"],"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"^1.0.0","delegates":"*"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.1.2","dist":{"shasum":"5367c788efce9f1859d76425e064f87dfe8e7637","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.1.2.tgz"},"_from":".","_npmVersion":"1.4.5","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"directories":{}},"1.1.3":{"name":"better-curry","version":"1.1.3","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","main":"index.js","scripts":{"test":"mocha","coverage":"node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha","benchmark":"node test/benchmark.js"},"engines":{"node":">=0.10"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying","partial function","functional","delegate"],"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"^1.0.0","delegates":"*"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.1.3","dist":{"shasum":"acb94b344bb675f92ae7ef6533126dcab2f87d23","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.1.3.tgz"},"_from":".","_npmVersion":"1.4.6","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"directories":{}},"1.2.0":{"name":"better-curry","version":"1.2.0","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","main":"index.js","scripts":{"test":"mocha","coverage":"node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha","benchmark":"node test/benchmark.js"},"engines":{"node":">=0.10"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying","partial function","functional","delegate"],"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"^1.0.0","delegates":"*"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.2.0","dist":{"shasum":"cea4e9a76ce37b8d87f3b0965c651118e32537ca","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.2.0.tgz"},"_from":".","_npmVersion":"1.4.6","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"directories":{}},"1.2.1":{"name":"better-curry","version":"1.2.1","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","main":"index.js","scripts":{"test":"mocha","coverage":"node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha","benchmark":"node test/benchmark.js"},"engines":{"node":">=0.10"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying","partial function","functional","delegate"],"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"^1.0.0","delegates":"*"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.2.1","dist":{"shasum":"7a56a7eed70a27e1cb9ee42f4c9838b5ac34a0fd","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.2.1.tgz"},"_from":".","_npmVersion":"1.4.6","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"directories":{}},"1.2.2":{"name":"better-curry","version":"1.2.2","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","main":"index.js","scripts":{"test":"mocha","coverage":"node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha","benchmark":"node test/benchmark.js"},"engines":{"node":">=0.10"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying","partial function","functional","delegate"],"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"^1.0.0","delegates":"*"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.2.2","dist":{"shasum":"9dd4957f4f9a277b39ad98d5c0bdec34d034d7f1","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.2.2.tgz"},"_from":".","_npmVersion":"1.4.6","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"directories":{}},"1.3.0":{"name":"better-curry","version":"1.3.0","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","main":"index.js","scripts":{"test":"mocha","coverage":"node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha","benchmark":"node test/benchmark.js"},"engines":{"node":">=0.10"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying","partial function","functional","delegate"],"testling":{"harness":"mocha-bdd","files":["test/globals.js","test/tests.js"],"browsers":["ie/6..latest","chrome/22..latest","firefox/16..latest","safari/latest","opera/11.0..latest","iphone/6","ipad/6","android-browser/latest"]},"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"^1.0.0","delegates":"*"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.3.0","dist":{"shasum":"9579c8130fe9b9c3135de6c3f9408bb7a0e3e136","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.3.0.tgz"},"_from":".","_npmVersion":"1.4.6","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"directories":{}},"1.3.1":{"name":"better-curry","version":"1.3.1","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","main":"index.js","scripts":{"test":"mocha","coverage":"node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha","benchmark":"node test/benchmark.js"},"engines":{"node":">=0.10"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying","partial function","functional","delegate"],"testling":{"harness":"mocha-bdd","files":["test/globals.js","test/tests.js"],"browsers":["ie/6..latest","chrome/22..latest","firefox/16..latest","safari/latest","opera/11.0..latest","iphone/6","ipad/6","android-browser/latest"]},"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"^1.0.0","delegates":"*"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.3.1","dist":{"shasum":"1f7b7a51f6083acd8d16be6d90911a2a09075b87","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.3.1.tgz"},"_from":".","_npmVersion":"1.4.6","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"directories":{}},"1.4.0":{"name":"better-curry","version":"1.4.0","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","main":"index.js","scripts":{"test":"mocha","coverage":"node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha","benchmark":"node test/benchmark.js"},"engines":{"node":">=0.10"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying","partial function","functional","delegate"],"testling":{"harness":"mocha-bdd","files":["test/globals.js","test/tests.js"],"browsers":["ie/6..latest","chrome/22..latest","firefox/16..latest","safari/latest","opera/11.0..latest","iphone/6","ipad/6","android-browser/latest"]},"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"^1.0.0","delegates":"*"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.4.0","dist":{"shasum":"68aca77f3a0f1466455478ef383ff769e54c8d17","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.4.0.tgz"},"_from":".","_npmVersion":"1.4.6","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"directories":{}},"1.5.0":{"name":"better-curry","version":"1.5.0","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","main":"index.js","scripts":{"test":"mocha","coverage":"node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha","benchmark":"node test/benchmark.js"},"engines":{"node":">=0.10"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying","partial function","functional","delegate"],"testling":{"harness":"mocha-bdd","files":["test/globals.js","test/tests.js"],"browsers":["ie/8..latest","chrome/latest","firefox/3.5","firefox/latest","safari/latest","opera/11.0..latest","iphone/6","ipad/6","android-browser/latest"]},"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"^1.0.0","delegates":"*"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.5.0","dist":{"shasum":"27f398d78a8154ffd8a1085ca2c2ed2c8e574bf6","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.5.0.tgz"},"_from":".","_npmVersion":"1.4.6","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"directories":{}},"1.5.1":{"name":"better-curry","version":"1.5.1","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","main":"index.js","scripts":{"test":"mocha","coverage":"node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha","benchmark":"node test/benchmark.js"},"engines":{"node":">=0.10"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying","partial function","functional","delegate"],"testling":{"harness":"mocha-bdd","files":["test/globals.js","test/tests.js"],"browsers":["ie/8..latest","chrome/latest","firefox/3.5","firefox/latest","safari/latest","opera/11.0..latest","iphone/6","ipad/6","android-browser/latest"]},"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"^1.0.0","delegates":"*"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.5.1","dist":{"shasum":"9f187cb61356028145d8d998e1d06c3de716e6c1","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.5.1.tgz"},"_from":".","_npmVersion":"1.4.6","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"directories":{}},"1.6.0":{"name":"better-curry","version":"1.6.0","description":"Forget Function.bind and func.apply(context, arguments), performance matters! For a better curry!","main":"index.js","scripts":{"test":"mocha","coverage":"node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha","benchmark":"node test/benchmark.js"},"engines":{"node":">=0.8"},"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"keywords":["curry","function","bind","currying","partial function","functional","delegate"],"testling":{"harness":"mocha-bdd","files":["test/globals.js","test/tests.js"],"browsers":["ie/8..latest","chrome/latest","firefox/3.5","firefox/latest","safari/latest","opera/11.0..latest","iphone/6","ipad/6","android-browser/latest"]},"devDependencies":{"mocha":"*","expect.js":"*","benchmark":"1.x.x","delegates":"*"},"author":"","license":"MIT","bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"homepage":"https://github.com/pocesar/js-bettercurry","_id":"better-curry@1.6.0","_shasum":"38f716b24c8cee07a262abc41c22c314e20e3869","_from":".","_npmVersion":"1.4.10","_npmUser":{"name":"pocesar","email":"email@pocesar.e4ward.com"},"maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"dist":{"shasum":"38f716b24c8cee07a262abc41c22c314e20e3869","tarball":"https://registry.npmjs.org/better-curry/-/better-curry-1.6.0.tgz"},"directories":{}}},"readme":"[![Build Status](https://travis-ci.org/pocesar/js-bettercurry.png?branch=master)](https://travis-ci.org/pocesar/js-bettercurry?branch=master)\r\n\r\n[![browser support](https://ci.testling.com/pocesar/js-bettercurry.png)](https://ci.testling.com/pocesar/js-bettercurry)\r\n\r\n# Better Curry\r\n\r\nBecause `return function(){ return fn.apply(context, Array.prototype.slice.call(arguments)); }` isn't good enough, that's why better curry.\r\n\r\nForget `Function.bind` and `func.apply(context, arguments)`, performance matters! For a better curry!\r\n\r\nYou won't find any other curry module that can achieve those benchmarks.\r\n\r\n## Install\r\n\r\n```bash\r\n~ npm install better-curry\r\n```\r\n\r\nor\r\n\r\n```bash\r\n~ bower install better-curry\r\n```\r\n\r\nWorks on the browser or on node.js (super duper performance on the latter)\r\n\r\n## API\r\n\r\n#### `BetterCurry.wrap(fn [, context[, len [, checkArguments]]])`\r\n\r\nWhen the function have all arguments defined.\r\nYou can bind the new resulting function to a new context (change the `this` inside the function).\r\n\r\n```js\r\nfunction base(argument1, argument2){\r\n    return this.data + ' ' + argument1 + argument2;\r\n}\r\n\r\nvar based = BetterCurry.wrap(base, {data: 'hurry'});\r\nbased('up','!'); // 'hurry up!'\r\n```\r\n\r\nIf the function doesn't have defined parameters, you can still coerce\r\nthe function to adopt a length\r\n\r\n```js\r\nfunction base(){\r\n    return Array.prototype.slice.call(arguments).join(' + ');\r\n}\r\nvar based = BetterCurry.wrap(base, null, 3);\r\nbased('one', 'two', 'three', 'will be ignored'); // 'one + two + three'\r\n```\r\n\r\nPassing a `len` of `-1` will make sure it behaves like variadic (that is, uses `fn.apply(context, Array.prototype.slice.call(arguments));`\r\n\r\nWhen passing `true` to `checkArguments`, it will check if the body of the function has the `arguments` keyword.\r\nIf so, it will use a variadic function instead of a defined length.\r\n\r\n```js\r\nfunction base(){\r\n    return Array.prototype.slice.call(arguments).join(' + ');\r\n}\r\nvar based = BetterCurry.wrap(base, null, -1);\r\nbased('one', 'two', 'three', 'wont be ignored','its','free for all'); // 'one + two + three + wont be ignored + its + free for all'\r\n```\r\n\r\nGenerated function will have a `__length` property, that equals to the original fn length.\r\n\r\nYou may hint the function by appending the expected length to your function (or if it's already wrapped):\r\n\r\n```js\r\nvar myfunc = function(arg1, arg2, arg3, arg4){\r\n\r\n};\r\nmyfunc.__length = 3;\r\n\r\nBetterCurry.wrap(myfunc, null, true); // creates a threeArgs wrapped function\r\n```\r\n\r\n#### `BetterCurry.predefine(fn, args [, context[, len [, checkArguments]]])`\r\n\r\nPredefine creates a function that, when executed, will have the\r\npredefined arguments plus any arguments that you pass:\r\n\r\n```js\r\nfunction base(argument){\r\n  return argument;\r\n}\r\nvar based = BetterCurry.predefine(base, ['argument','will be ignored']);\r\nbased('this will be ignored as well'); // 'argument'\r\n```\r\n\r\nVariadic work as well, just remember to pass the len `-1` (or `8` if you think it will be that big...)\r\n\r\n```js\r\nfunction base(){\r\nreturn Array.prototype.slice.call(arguments).join(' + ');\r\n}\r\nvar curried = BetterCurry.predefine(base, ['1','2','3','4'], null, -1);\r\ncurried('5'); // '1 + 2 + 3 + 4 + 5'\r\n\r\ncurried = BetterCurry.predefine(base, ['1','2','3','4'], null, 5);\r\ncurried('5','6'); // '1 + 2 + 3 + 4 + 5'\r\n```\r\n\r\nAll `-1` len are slower since it uses `Function.apply` (many times slower than `Function.call`)\r\n\r\nWhen passing `true` to `checkArguments`, it will check if the body of the function has the `arguments` keyword.\r\nIf so, it will use a variadic function instead of a defined length.\r\n\r\nGenerated function will have a `__length` property, that equals to the original fn length\r\n\r\n#### `BetterCurry.delegate(proto, target)`\r\n\r\nA minor rewrite of [visionmedia's delegates](https://github.com/visionmedia/node-delegates) but around 13% faster\r\n\r\n```js\r\nvar obj = {\r\n  request: {\r\n    _value: 1,\r\n    function1: function(){},\r\n    get value(){\r\n      return this._value;\r\n    },\r\n    set value(val){\r\n      this._value = val;\r\n    },\r\n  }\r\n};\r\n\r\nvar delegated = BetterCurry.delegate(obj, 'request'); //all mirror functions from obj will reflect to obj.request with the same context\r\n\r\ndelegated\r\n.method('function1')\r\n.access('value')\r\n.access({name: 'value', as: 'value2'})\r\n.method({name: 'function1', as: 'function2', args:['arg1']});\r\n\r\n//obj is now:\r\nobj = {\r\n  function1: function1(){/*...*/},\r\n  function2: function1(arg1){/*...*/},\r\n  value: /*..value..*/\r\n  value2: /*..value..*/\r\n  request: {/*...*/}\r\n};\r\n```\r\n\r\n#### `BetterCurry.flatten(...args)`\r\n\r\nFlattens all array-like arguments passed (`Array` and `arguments`) and append them in order:\r\n\r\n```js\r\nfunction stuff(){\r\n    return BetterCurry.flatten([1,2,[3]], arguments);\r\n}\r\nstuff(1,2,3, [1,2,3]); // returns [1,2,[3],1,2,3,[1,2,3]]\r\n```\r\n\r\n# Test\r\n\r\nJust regular stuff (100% coverage by the way)\r\n\r\n```bash\r\nnpm run test\r\n```\r\n\r\n```bash\r\nnpm run coverage\r\n```\r\n\r\n```\r\n=============================== Coverage summary ===============================\r\nStatements   : 100% ( 138/138 ), 3 ignored\r\nBranches     : 100% ( 330/330 ), 5 ignored\r\nFunctions    : 100% ( 30/30 )\r\nLines        : 100% ( 138/138 )\r\n================================================================================\r\n```\r\n\r\n# Benchmark\r\n\r\nCurious about performance? Get flabbergasted.\r\n\r\n```bash\r\nnpm run benchmark\r\n```\r\n\r\n# License\r\n\r\n```\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014 Paulo Cesar\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n```","maintainers":[{"name":"pocesar","email":"email@pocesar.e4ward.com"}],"time":{"modified":"2014-05-28T17:25:09.270Z","created":"2014-03-08T08:19:39.015Z","1.0.0":"2014-03-08T08:19:39.015Z","1.1.0":"2014-03-15T09:40:08.843Z","1.1.1":"2014-03-15T10:17:17.998Z","1.1.2":"2014-03-20T04:37:57.121Z","1.1.3":"2014-04-01T16:18:56.547Z","1.2.0":"2014-04-02T02:27:23.493Z","1.2.1":"2014-04-02T03:23:41.154Z","1.2.2":"2014-04-19T04:48:28.455Z","1.3.0":"2014-04-19T07:25:41.028Z","1.3.1":"2014-04-19T07:36:39.101Z","1.4.0":"2014-04-19T20:58:20.974Z","1.5.0":"2014-04-20T03:37:42.266Z","1.5.1":"2014-04-21T05:36:40.286Z","1.6.0":"2014-05-28T17:25:09.270Z"},"homepage":"https://github.com/pocesar/js-bettercurry","keywords":["curry","function","bind","currying","partial function","functional","delegate"],"repository":{"type":"git","url":"https://github.com/pocesar/js-bettercurry"},"bugs":{"url":"https://github.com/pocesar/js-bettercurry/issues"},"license":"MIT","readmeFilename":"README.md","users":{"pocesar":true},"_attachments":{},"_etag":"\"AMPY6C14ZOPCY98RZ2X2LGJM8\""}